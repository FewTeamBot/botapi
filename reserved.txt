"""# confirm
        elif text == '#confirm':
            confirm_template = ConfirmTemplate(text='Do it ;-)?', actions=[
                MessageTemplateAction(label='Just Do It!', text='Just Do It!'),
                MessageTemplateAction(label='wat', text='wat'),
            ])
            template_message = TemplateSendMessage(
                alt_text='Confirm alt text', template=confirm_template)
            line_bot_api.reply_message(event.reply_token, template_message)
        # buttons
        elif text == '#buttons':
            buttons_template = ButtonsTemplate(
                title='Dipilih-dipilih', text='Hello, silahkan dipilih', actions=[
                    URITemplateAction(
                        label='Jangan tekan', uri='https://ikraduyae.blogspot.co.id'),
                    PostbackTemplateAction(label='ping', data='ping'),
                    PostbackTemplateAction(
                        label='ping with text', data='ping',
                        text='ping'),
                    MessageTemplateAction(label="Transliterasi 'Nasi'", text='米')
                ])
            template_message = TemplateSendMessage(
                alt_text='Hello, silahkan dipilih', template=buttons_template)
            line_bot_api.reply_message(event.reply_token, template_message)"""

"""            
@handler.add(MessageEvent, message=LocationMessage)
def handle_location_message(event):
    line_bot_api.reply_message(
        event.reply_token,
        LocationSendMessage(
            title=event.message.title, address=event.message.address,
            latitude=event.message.latitude, longitude=event.message.longitude
        )
    )
"""

"""
@handler.add(MessageEvent, message=StickerMessage)
def handle_sticker_message(event):
    line_bot_api.reply_message(
        event.reply_token,
        StickerSendMessage(
            package_id=event.message.package_id,
            sticker_id=event.message.sticker_id)
    )
"""
"""
# Other Message Type
@handler.add(MessageEvent, message=(ImageMessage, VideoMessage, AudioMessage))
def handle_content_message(event):
    if isinstance(event.message, ImageMessage):
        ext = 'jpg'
    elif isinstance(event.message, VideoMessage):
        ext = 'mp4'
    elif isinstance(event.message, AudioMessage):
        ext = 'm4a'
    else:
        return

    message_content = line_bot_api.get_message_content(event.message.id)
    with tempfile.NamedTemporaryFile(dir=static_tmp_path, prefix=ext + '-', delete=False) as tf:
        for chunk in message_content.iter_content():
            tf.write(chunk)
        tempfile_path = tf.name

    dist_path = tempfile_path + '.' + ext
    dist_name = os.path.basename(dist_path)
    os.rename(tempfile_path, dist_path)

    line_bot_api.reply_message(
        event.reply_token, [
            TextSendMessage(text='File saved.'),
            TextSendMessage(text=request.host_url + os.path.join('static', 'tmp', dist_name))
        ])
"""